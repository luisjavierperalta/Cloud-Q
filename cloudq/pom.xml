<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.cloudq</groupId>
	<artifactId>cloudq</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>cloudq</name>
	<description>AI-powered Engine Optimization</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.5.10</version>
		</dependency>

		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>1.0.0-M1.1</version> <!-- Check for latest version -->
		</dependency>
		<!-- ND4J Backend for CPU -->
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-native-platform</artifactId>
			<version>1.0.0-M1.1</version> <!-- Check for latest version -->
		</dependency>
		<!-- DataVec for data preprocessing -->
		<dependency>
			<groupId>org.datavec</groupId>
			<artifactId>datavec-api</artifactId>
			<version>1.0.0-M1.1</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

			<!-- Apache Spark Core -->
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-core_2.12</artifactId>
				<version>3.4.0</version>
			</dependency>

			<!-- Apache Spark SQL (for DataFrame support) -->
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-sql_2.12</artifactId>
				<version>3.4.0</version>
			</dependency>

			<!-- Apache Spark MLlib -->
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-mllib_2.12</artifactId>
				<version>3.4.0</version>
			</dependency>


		<!-- Weka Dependency -->
		<!-- https://mvnrepository.com/artifact/nz.ac.waikato.cms.weka/weka-stable -->
		<dependency>
			<groupId>nz.ac.waikato.cms.weka</groupId>
			<artifactId>weka-stable</artifactId>
			<version>3.8.0</version>
		</dependency>
		<!-- OptaPlanner Core -->
		<dependency>
			<groupId>org.optaplanner</groupId>
			<artifactId>optaplanner-core</artifactId>
			<version>8.17.0.Final</version> <!-- Replace with the latest version -->
		</dependency>
		<!-- OptaPlanner Spring Boot Starter (if using Spring Boot) -->
		<dependency>
			<groupId>org.optaplanner</groupId>
			<artifactId>optaplanner-spring-boot-starter</artifactId>
			<version>8.17.0.Final</version> <!-- Replace with the latest version -->
		</dependency>
		<!-- Optional: For integration with JUnit for testing -->
		<dependency>
			<groupId>org.optaplanner</groupId>
			<artifactId>optaplanner-test</artifactId>
			<version>8.17.0.Final</version> <!-- Replace with the latest version -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.12</artifactId>
			<version>3.4.0</version> <!-- Use the appropriate version -->
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.12</artifactId>
			<version>3.4.0</version> <!-- Use the appropriate version -->
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_2.12</artifactId>
			<version>3.4.0</version> <!-- Use the appropriate version -->
		</dependency>
		<!-- SLF4J for logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>
		<!-- Core OptaPlanner dependency -->
		<dependency>
			<groupId>org.optaplanner</groupId>
			<artifactId>optaplanner-core</artifactId>
			<version>8.24.0.Final</version> <!-- Use the latest version as needed -->
		</dependency>
		<!-- OptaPlanner Spring dependency -->
		<dependency>
			<groupId>org.optaplanner</groupId>
			<artifactId>optaplanner-spring-boot-starter</artifactId>
			<version>8.24.0.Final</version> <!-- This should work if you're using Spring Boot -->
		</dependency>
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-native-platform</artifactId>
			<version>1.0.0-M1.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.5.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.ibm.cloud/sdk-core -->
		<dependency>
			<groupId>com.ibm.cloud</groupId>
			<artifactId>sdk-core</artifactId>
			<version>9.22.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.ibm.cloud/is -->
		<dependency>
			<groupId>com.ibm.cloud</groupId>
			<artifactId>is</artifactId>
			<version>0.21.0</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>com.ibm.cloud</groupId>
			<artifactId>ibm-analytics-engine-api</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.cloud</groupId>
			<artifactId>enterprise-billing-units</artifactId>
			<version>0.60.0</version>
		</dependency>

		<dependency>
			<groupId>com.ibm.cloud</groupId>
			<artifactId>vpc</artifactId>
			<version>0.21.0</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20210307</version> <!-- Replace with the latest version -->
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version> <!-- Replace with the latest version -->
		</dependency>

		<!-- AWS SDK for Java -->
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>ec2</artifactId>
			<version>2.20.0</version> <!-- Use the latest version -->
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>cloudwatch</artifactId>
			<version>2.20.0</version> <!-- Use the latest version -->
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>autoscaling</artifactId>
			<version>2.20.0</version> <!-- Use the latest version -->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>


		<!-- Testing dependencies (Optional) -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.8.2</version> <!-- Use the latest version -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.8.2</version> <!-- Use the latest version -->
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>com.azure.resourcemanager</groupId>
			<artifactId>azure-resourcemanager</artifactId>
			<version>2.29.0</version> <!-- Use the latest version -->
		</dependency>

		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-identity</artifactId>
			<version>1.6.0</version> <!-- Use the latest version -->
		</dependency>
		<dependency>
			<groupId>com.azure.resourcemanager</groupId>
			<artifactId>azure-resourcemanager-compute</artifactId>
			<version>2.22.0</version>
		</dependency>



		<!-- https://mvnrepository.com/artifact/com.azure.resourcemanager/azure-resourcemanager-resources -->
		<dependency>
			<groupId>com.azure.resourcemanager</groupId>
			<artifactId>azure-resourcemanager-resources</artifactId>
			<version>2.44.0</version>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>4.9.3</version>
		</dependency>

		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-core</artifactId>
			<version>1.6.0</version>
		</dependency>

		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-monitor-query</artifactId>
			<version>1.1.0</version> <!-- Use the latest version available -->
		</dependency>

		<!-- Scala Standard Library -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.13.10</version> <!-- Use the latest version of Scala you are working with -->
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.cloud/google-cloud-compute -->
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-compute</artifactId>
			<version>1.63.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>spring-cloud-gcp-dependencies</artifactId>
			<version>5.7.0</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>libraries-bom</artifactId>
			<version>26.49.0</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>

			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.14.0</version> <!-- Check for the latest version -->
		</dependency>



		<dependency>
		<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-monitoring</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.auth</groupId>
			<artifactId>google-auth-library-oauth2-http</artifactId>
			<version>1.6.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.18.0</version>
		</dependency>


		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.13.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>6.3.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>6.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>6.3.4</version>
		</dependency>

		<!-- JSON Web Token (JWT) -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>
		<!-- Spring Security Test (optional, for testing purposes) -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version> <!-- Check for the latest version -->
			<scope>provided</scope>
		</dependency>


		<!-- https://mvnrepository.com/artifact/com.google.ortools/ortools-java -->
		<dependency>
			<groupId>com.google.ortools</groupId>
			<artifactId>ortools-java</artifactId>
			<version>9.11.4210</version>
		</dependency>

		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>5.0.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- TensorFlow Java Dependency -->


		<!-- https://mvnrepository.com/artifact/org.tensorflow/tensorflow -->
		<!-- https://mvnrepository.com/artifact/org.tensorflow/tensorflow -->
		<dependency>
			<groupId>org.tensorflow</groupId>
			<artifactId>tensorflow</artifactId>
			<version>1.15.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>












	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
