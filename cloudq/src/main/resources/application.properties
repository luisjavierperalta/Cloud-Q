spring.application.name=cloudq

# Server Configuration
server.port=8080

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Spring Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin


# Swagger Configuration
springdoc.api-docs.path=/v3/api-docs

gcp.project-id=your-gcp-project-id
gcp.zone=your-gcp-zone
gcp.api-key=your-gcp-api-key

azure.subscription-id=your-azure-subscription-id
azure.resource-group=your-resource-group
azure.vm-name=your-vm-name

oci.tenancy-id=YOUR_TENANCY_ID
oci.user-id=YOUR_USER_ID
oci.fingerprint=YOUR_FINGERPRINT
oci.private-key=YOUR_BASE64_ENCODED_PRIVATE_KEY
oci.region=YOUR_REGION

# AWS Configuration
aws.accessKeyId=YOUR_AWS_ACCESS_KEY
aws.secretAccessKey=YOUR_AWS_SECRET_KEY
aws.region=us-west-2

# GCP Configuration
gcp.projectId=your-gcp-project-id
gcp.credentialsFilePath=/path/to/your-gcp-credentials.json

# IBM Cloud Configuration
ibm.apikey=YOUR_IBM_API_KEY
ibm.region=us-south

# MAIL SERVICE
# Spring Mail Configuration
spring.mail.host=smtp.example.com           # Your SMTP server address
spring.mail.port=587                         # SMTP port (e.g., 587 for TLS)
spring.mail.username=your-email@example.com  # Your email address (sender)
spring.mail.password=your-email-password      # Your email password
spring.mail.properties.mail.smtp.auth=true   # Enable authentication
spring.mail.properties.mail.smtp.starttls.enable=true # Enable TLS
spring.mail.properties.mail.debug=true        # Enable debug output (optional)

# Additional properties for specific email services can be added here

# LOGGING


# Set the logging level specifically for the application package
logging.level.com.cloudq.cloudq=DEBUG

# Specify the log file location and name
logging.file.name=/var/log/cloudq/cloudq.log

# Log file rotation settings (if using Logback)
logging.file.max-size=10MB   # Maximum size of a log file before rolling
logging.file.max-history=30    # Keep 30 days of logs
logging.file.total-size-cap=1GB # Total size cap for all logs

# Set the logging pattern for the log file
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Optional: Enable console logging (useful for development)
logging.console.enabled=true
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Optional: Set the logging level for Spring Boot internal classes (for troubleshooting)
logging.level.org.springframework=INFO
logging.level.org.hibernate=ERROR

# MONITORING
# Prometheus configuration
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true







